<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace zostay\Speakeasy_API\Models\Shared;


/**
 * EmbedToken - A representation of an embed token granted for working with Speakeasy components.
 * 
 * @package zostay\Speakeasy_API\Models\Shared
 * @access public
 */
class EmbedToken
{
    /**
     * Creation timestamp.
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * The ID of the user that created this token.
     * 
     * @var string $createdBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_by')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $createdBy;
    
    /**
     * A detailed description of the EmbedToken.
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * The time this token expires.
     * 
     * @var \DateTime $expiresAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('expires_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $expiresAt;
    
    /**
     * The filters applied to this token.
     * 
     * @var string $filters
     */
	#[\JMS\Serializer\Annotation\SerializedName('filters')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $filters;
    
    /**
     * The ID of this EmbedToken.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The last time this token was used.
     * 
     * @var ?\DateTime $lastUsed
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_used')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastUsed = null;
    
    /**
     * The time this token was revoked.
     * 
     * @var ?\DateTime $revokedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('revoked_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $revokedAt = null;
    
    /**
     * The ID of the user that revoked this token.
     * 
     * @var ?string $revokedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('revoked_by')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revokedBy = null;
    
    /**
     * The workspace ID this token belongs to.
     * 
     * @var string $workspaceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('workspace_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $workspaceId;
    
	public function __construct()
	{
		$this->createdAt = new \DateTime();
		$this->createdBy = "";
		$this->description = "";
		$this->expiresAt = new \DateTime();
		$this->filters = "";
		$this->id = "";
		$this->lastUsed = null;
		$this->revokedAt = null;
		$this->revokedBy = null;
		$this->workspaceId = "";
	}
}
